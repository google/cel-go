// Code generated from ./Commands.g4 by ANTLR 4.12.0. DO NOT EDIT.

package parser

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr/v4"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type CommandsLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var commandslexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func commandslexerLexerInit() {
	staticData := &commandslexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.literalNames = []string{
		"", "'%let'", "'%declare'", "'%delete'", "'%eval'", "", "", "'->'",
		"'='", "'=='", "'!='", "'in'", "'<'", "'<='", "'>='", "'>'", "'&&'",
		"'||'", "'['", "']'", "'{'", "'}'", "'('", "')'", "'.'", "','", "'-'",
		"'!'", "'?'", "':'", "'+'", "'*'", "'/'", "'%'", "'true'", "'false'",
		"'null'",
	}
	staticData.symbolicNames = []string{
		"", "", "", "", "", "COMMAND", "FLAG", "ARROW", "EQUAL_ASSIGN", "EQUALS",
		"NOT_EQUALS", "IN", "LESS", "LESS_EQUALS", "GREATER_EQUALS", "GREATER",
		"LOGICAL_AND", "LOGICAL_OR", "LBRACKET", "RPRACKET", "LBRACE", "RBRACE",
		"LPAREN", "RPAREN", "DOT", "COMMA", "MINUS", "EXCLAM", "QUESTIONMARK",
		"COLON", "PLUS", "STAR", "SLASH", "PERCENT", "CEL_TRUE", "CEL_FALSE",
		"NUL", "WHITESPACE", "COMMENT", "NUM_FLOAT", "NUM_INT", "NUM_UINT",
		"STRING", "BYTES", "IDENTIFIER",
	}
	staticData.ruleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "COMMAND", "FLAG", "ARROW", "EQUAL_ASSIGN",
		"EQUALS", "NOT_EQUALS", "IN", "LESS", "LESS_EQUALS", "GREATER_EQUALS",
		"GREATER", "LOGICAL_AND", "LOGICAL_OR", "LBRACKET", "RPRACKET", "LBRACE",
		"RBRACE", "LPAREN", "RPAREN", "DOT", "COMMA", "MINUS", "EXCLAM", "QUESTIONMARK",
		"COLON", "PLUS", "STAR", "SLASH", "PERCENT", "CEL_TRUE", "CEL_FALSE",
		"NUL", "BACKSLASH", "LETTER", "DIGIT", "EXPONENT", "HEXDIGIT", "RAW",
		"ESC_SEQ", "ESC_CHAR_SEQ", "ESC_OCT_SEQ", "ESC_BYTE_SEQ", "ESC_UNI_SEQ",
		"WHITESPACE", "COMMENT", "NUM_FLOAT", "NUM_INT", "NUM_UINT", "STRING",
		"BYTES", "IDENTIFIER",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 44, 481, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
		2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1,
		4, 1, 4, 1, 5, 3, 5, 144, 8, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1,
		7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 11,
		1, 11, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 15, 1,
		15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 18, 1, 18, 1, 19, 1, 19,
		1, 20, 1, 20, 1, 21, 1, 21, 1, 22, 1, 22, 1, 23, 1, 23, 1, 24, 1, 24, 1,
		25, 1, 25, 1, 26, 1, 26, 1, 27, 1, 27, 1, 28, 1, 28, 1, 29, 1, 29, 1, 30,
		1, 30, 1, 31, 1, 31, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33, 1,
		34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35,
		1, 36, 1, 36, 1, 37, 1, 37, 1, 38, 1, 38, 1, 39, 1, 39, 3, 39, 235, 8,
		39, 1, 39, 4, 39, 238, 8, 39, 11, 39, 12, 39, 239, 1, 40, 1, 40, 1, 41,
		1, 41, 1, 42, 1, 42, 1, 42, 1, 42, 3, 42, 250, 8, 42, 1, 43, 1, 43, 1,
		43, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 45, 1, 45, 1, 45, 1, 45, 1, 45,
		1, 46, 1, 46, 1, 46, 1, 46, 1, 46, 1, 46, 1, 46, 1, 46, 1, 46, 1, 46, 1,
		46, 1, 46, 1, 46, 1, 46, 1, 46, 1, 46, 1, 46, 1, 46, 3, 46, 283, 8, 46,
		1, 47, 4, 47, 286, 8, 47, 11, 47, 12, 47, 287, 1, 47, 1, 47, 1, 48, 1,
		48, 1, 48, 1, 48, 5, 48, 296, 8, 48, 10, 48, 12, 48, 299, 9, 48, 1, 48,
		1, 48, 1, 49, 4, 49, 304, 8, 49, 11, 49, 12, 49, 305, 1, 49, 1, 49, 4,
		49, 310, 8, 49, 11, 49, 12, 49, 311, 1, 49, 3, 49, 315, 8, 49, 1, 49, 4,
		49, 318, 8, 49, 11, 49, 12, 49, 319, 1, 49, 1, 49, 1, 49, 1, 49, 4, 49,
		326, 8, 49, 11, 49, 12, 49, 327, 1, 49, 3, 49, 331, 8, 49, 3, 49, 333,
		8, 49, 1, 50, 4, 50, 336, 8, 50, 11, 50, 12, 50, 337, 1, 50, 1, 50, 1,
		50, 1, 50, 4, 50, 344, 8, 50, 11, 50, 12, 50, 345, 3, 50, 348, 8, 50, 1,
		51, 4, 51, 351, 8, 51, 11, 51, 12, 51, 352, 1, 51, 1, 51, 1, 51, 1, 51,
		1, 51, 1, 51, 4, 51, 361, 8, 51, 11, 51, 12, 51, 362, 1, 51, 1, 51, 3,
		51, 367, 8, 51, 1, 52, 1, 52, 1, 52, 5, 52, 372, 8, 52, 10, 52, 12, 52,
		375, 9, 52, 1, 52, 1, 52, 1, 52, 1, 52, 5, 52, 381, 8, 52, 10, 52, 12,
		52, 384, 9, 52, 1, 52, 1, 52, 1, 52, 1, 52, 1, 52, 1, 52, 1, 52, 5, 52,
		393, 8, 52, 10, 52, 12, 52, 396, 9, 52, 1, 52, 1, 52, 1, 52, 1, 52, 1,
		52, 1, 52, 1, 52, 1, 52, 1, 52, 5, 52, 407, 8, 52, 10, 52, 12, 52, 410,
		9, 52, 1, 52, 1, 52, 1, 52, 1, 52, 1, 52, 1, 52, 5, 52, 418, 8, 52, 10,
		52, 12, 52, 421, 9, 52, 1, 52, 1, 52, 1, 52, 1, 52, 1, 52, 5, 52, 428,
		8, 52, 10, 52, 12, 52, 431, 9, 52, 1, 52, 1, 52, 1, 52, 1, 52, 1, 52, 1,
		52, 1, 52, 1, 52, 5, 52, 441, 8, 52, 10, 52, 12, 52, 444, 9, 52, 1, 52,
		1, 52, 1, 52, 1, 52, 1, 52, 1, 52, 1, 52, 1, 52, 1, 52, 1, 52, 5, 52, 456,
		8, 52, 10, 52, 12, 52, 459, 9, 52, 1, 52, 1, 52, 1, 52, 1, 52, 3, 52, 465,
		8, 52, 1, 53, 1, 53, 1, 53, 1, 54, 1, 54, 3, 54, 472, 8, 54, 1, 54, 1,
		54, 1, 54, 5, 54, 477, 8, 54, 10, 54, 12, 54, 480, 9, 54, 4, 394, 408,
		442, 457, 0, 55, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17,
		9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35,
		18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53,
		27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35, 71,
		36, 73, 0, 75, 0, 77, 0, 79, 0, 81, 0, 83, 0, 85, 0, 87, 0, 89, 0, 91,
		0, 93, 0, 95, 37, 97, 38, 99, 39, 101, 40, 103, 41, 105, 42, 107, 43, 109,
		44, 1, 0, 16, 2, 0, 65, 90, 97, 122, 2, 0, 69, 69, 101, 101, 2, 0, 43,
		43, 45, 45, 3, 0, 48, 57, 65, 70, 97, 102, 2, 0, 82, 82, 114, 114, 10,
		0, 34, 34, 39, 39, 63, 63, 92, 92, 96, 98, 102, 102, 110, 110, 114, 114,
		116, 116, 118, 118, 2, 0, 88, 88, 120, 120, 3, 0, 9, 10, 12, 13, 32, 32,
		1, 0, 10, 10, 2, 0, 85, 85, 117, 117, 4, 0, 10, 10, 13, 13, 34, 34, 92,
		92, 4, 0, 10, 10, 13, 13, 39, 39, 92, 92, 1, 0, 92, 92, 3, 0, 10, 10, 13,
		13, 34, 34, 3, 0, 10, 10, 13, 13, 39, 39, 2, 0, 66, 66, 98, 98, 515, 0,
		1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0,
		9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0,
		0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0,
		0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0,
		0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1,
		0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47,
		1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0,
		55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0,
		0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0,
		0, 0, 71, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0,
		0, 0, 0, 101, 1, 0, 0, 0, 0, 103, 1, 0, 0, 0, 0, 105, 1, 0, 0, 0, 0, 107,
		1, 0, 0, 0, 0, 109, 1, 0, 0, 0, 1, 111, 1, 0, 0, 0, 3, 116, 1, 0, 0, 0,
		5, 125, 1, 0, 0, 0, 7, 133, 1, 0, 0, 0, 9, 139, 1, 0, 0, 0, 11, 143, 1,
		0, 0, 0, 13, 148, 1, 0, 0, 0, 15, 151, 1, 0, 0, 0, 17, 153, 1, 0, 0, 0,
		19, 156, 1, 0, 0, 0, 21, 159, 1, 0, 0, 0, 23, 162, 1, 0, 0, 0, 25, 164,
		1, 0, 0, 0, 27, 167, 1, 0, 0, 0, 29, 170, 1, 0, 0, 0, 31, 172, 1, 0, 0,
		0, 33, 175, 1, 0, 0, 0, 35, 178, 1, 0, 0, 0, 37, 180, 1, 0, 0, 0, 39, 182,
		1, 0, 0, 0, 41, 184, 1, 0, 0, 0, 43, 186, 1, 0, 0, 0, 45, 188, 1, 0, 0,
		0, 47, 190, 1, 0, 0, 0, 49, 192, 1, 0, 0, 0, 51, 194, 1, 0, 0, 0, 53, 196,
		1, 0, 0, 0, 55, 198, 1, 0, 0, 0, 57, 200, 1, 0, 0, 0, 59, 202, 1, 0, 0,
		0, 61, 204, 1, 0, 0, 0, 63, 206, 1, 0, 0, 0, 65, 208, 1, 0, 0, 0, 67, 210,
		1, 0, 0, 0, 69, 215, 1, 0, 0, 0, 71, 221, 1, 0, 0, 0, 73, 226, 1, 0, 0,
		0, 75, 228, 1, 0, 0, 0, 77, 230, 1, 0, 0, 0, 79, 232, 1, 0, 0, 0, 81, 241,
		1, 0, 0, 0, 83, 243, 1, 0, 0, 0, 85, 249, 1, 0, 0, 0, 87, 251, 1, 0, 0,
		0, 89, 254, 1, 0, 0, 0, 91, 259, 1, 0, 0, 0, 93, 282, 1, 0, 0, 0, 95, 285,
		1, 0, 0, 0, 97, 291, 1, 0, 0, 0, 99, 332, 1, 0, 0, 0, 101, 347, 1, 0, 0,
		0, 103, 366, 1, 0, 0, 0, 105, 464, 1, 0, 0, 0, 107, 466, 1, 0, 0, 0, 109,
		471, 1, 0, 0, 0, 111, 112, 5, 37, 0, 0, 112, 113, 5, 108, 0, 0, 113, 114,
		5, 101, 0, 0, 114, 115, 5, 116, 0, 0, 115, 2, 1, 0, 0, 0, 116, 117, 5,
		37, 0, 0, 117, 118, 5, 100, 0, 0, 118, 119, 5, 101, 0, 0, 119, 120, 5,
		99, 0, 0, 120, 121, 5, 108, 0, 0, 121, 122, 5, 97, 0, 0, 122, 123, 5, 114,
		0, 0, 123, 124, 5, 101, 0, 0, 124, 4, 1, 0, 0, 0, 125, 126, 5, 37, 0, 0,
		126, 127, 5, 100, 0, 0, 127, 128, 5, 101, 0, 0, 128, 129, 5, 108, 0, 0,
		129, 130, 5, 101, 0, 0, 130, 131, 5, 116, 0, 0, 131, 132, 5, 101, 0, 0,
		132, 6, 1, 0, 0, 0, 133, 134, 5, 37, 0, 0, 134, 135, 5, 101, 0, 0, 135,
		136, 5, 118, 0, 0, 136, 137, 5, 97, 0, 0, 137, 138, 5, 108, 0, 0, 138,
		8, 1, 0, 0, 0, 139, 140, 5, 37, 0, 0, 140, 141, 3, 109, 54, 0, 141, 10,
		1, 0, 0, 0, 142, 144, 5, 45, 0, 0, 143, 142, 1, 0, 0, 0, 143, 144, 1, 0,
		0, 0, 144, 145, 1, 0, 0, 0, 145, 146, 5, 45, 0, 0, 146, 147, 3, 109, 54,
		0, 147, 12, 1, 0, 0, 0, 148, 149, 5, 45, 0, 0, 149, 150, 5, 62, 0, 0, 150,
		14, 1, 0, 0, 0, 151, 152, 5, 61, 0, 0, 152, 16, 1, 0, 0, 0, 153, 154, 5,
		61, 0, 0, 154, 155, 5, 61, 0, 0, 155, 18, 1, 0, 0, 0, 156, 157, 5, 33,
		0, 0, 157, 158, 5, 61, 0, 0, 158, 20, 1, 0, 0, 0, 159, 160, 5, 105, 0,
		0, 160, 161, 5, 110, 0, 0, 161, 22, 1, 0, 0, 0, 162, 163, 5, 60, 0, 0,
		163, 24, 1, 0, 0, 0, 164, 165, 5, 60, 0, 0, 165, 166, 5, 61, 0, 0, 166,
		26, 1, 0, 0, 0, 167, 168, 5, 62, 0, 0, 168, 169, 5, 61, 0, 0, 169, 28,
		1, 0, 0, 0, 170, 171, 5, 62, 0, 0, 171, 30, 1, 0, 0, 0, 172, 173, 5, 38,
		0, 0, 173, 174, 5, 38, 0, 0, 174, 32, 1, 0, 0, 0, 175, 176, 5, 124, 0,
		0, 176, 177, 5, 124, 0, 0, 177, 34, 1, 0, 0, 0, 178, 179, 5, 91, 0, 0,
		179, 36, 1, 0, 0, 0, 180, 181, 5, 93, 0, 0, 181, 38, 1, 0, 0, 0, 182, 183,
		5, 123, 0, 0, 183, 40, 1, 0, 0, 0, 184, 185, 5, 125, 0, 0, 185, 42, 1,
		0, 0, 0, 186, 187, 5, 40, 0, 0, 187, 44, 1, 0, 0, 0, 188, 189, 5, 41, 0,
		0, 189, 46, 1, 0, 0, 0, 190, 191, 5, 46, 0, 0, 191, 48, 1, 0, 0, 0, 192,
		193, 5, 44, 0, 0, 193, 50, 1, 0, 0, 0, 194, 195, 5, 45, 0, 0, 195, 52,
		1, 0, 0, 0, 196, 197, 5, 33, 0, 0, 197, 54, 1, 0, 0, 0, 198, 199, 5, 63,
		0, 0, 199, 56, 1, 0, 0, 0, 200, 201, 5, 58, 0, 0, 201, 58, 1, 0, 0, 0,
		202, 203, 5, 43, 0, 0, 203, 60, 1, 0, 0, 0, 204, 205, 5, 42, 0, 0, 205,
		62, 1, 0, 0, 0, 206, 207, 5, 47, 0, 0, 207, 64, 1, 0, 0, 0, 208, 209, 5,
		37, 0, 0, 209, 66, 1, 0, 0, 0, 210, 211, 5, 116, 0, 0, 211, 212, 5, 114,
		0, 0, 212, 213, 5, 117, 0, 0, 213, 214, 5, 101, 0, 0, 214, 68, 1, 0, 0,
		0, 215, 216, 5, 102, 0, 0, 216, 217, 5, 97, 0, 0, 217, 218, 5, 108, 0,
		0, 218, 219, 5, 115, 0, 0, 219, 220, 5, 101, 0, 0, 220, 70, 1, 0, 0, 0,
		221, 222, 5, 110, 0, 0, 222, 223, 5, 117, 0, 0, 223, 224, 5, 108, 0, 0,
		224, 225, 5, 108, 0, 0, 225, 72, 1, 0, 0, 0, 226, 227, 5, 92, 0, 0, 227,
		74, 1, 0, 0, 0, 228, 229, 7, 0, 0, 0, 229, 76, 1, 0, 0, 0, 230, 231, 2,
		48, 57, 0, 231, 78, 1, 0, 0, 0, 232, 234, 7, 1, 0, 0, 233, 235, 7, 2, 0,
		0, 234, 233, 1, 0, 0, 0, 234, 235, 1, 0, 0, 0, 235, 237, 1, 0, 0, 0, 236,
		238, 3, 77, 38, 0, 237, 236, 1, 0, 0, 0, 238, 239, 1, 0, 0, 0, 239, 237,
		1, 0, 0, 0, 239, 240, 1, 0, 0, 0, 240, 80, 1, 0, 0, 0, 241, 242, 7, 3,
		0, 0, 242, 82, 1, 0, 0, 0, 243, 244, 7, 4, 0, 0, 244, 84, 1, 0, 0, 0, 245,
		250, 3, 87, 43, 0, 246, 250, 3, 91, 45, 0, 247, 250, 3, 93, 46, 0, 248,
		250, 3, 89, 44, 0, 249, 245, 1, 0, 0, 0, 249, 246, 1, 0, 0, 0, 249, 247,
		1, 0, 0, 0, 249, 248, 1, 0, 0, 0, 250, 86, 1, 0, 0, 0, 251, 252, 3, 73,
		36, 0, 252, 253, 7, 5, 0, 0, 253, 88, 1, 0, 0, 0, 254, 255, 3, 73, 36,
		0, 255, 256, 2, 48, 51, 0, 256, 257, 2, 48, 55, 0, 257, 258, 2, 48, 55,
		0, 258, 90, 1, 0, 0, 0, 259, 260, 3, 73, 36, 0, 260, 261, 7, 6, 0, 0, 261,
		262, 3, 81, 40, 0, 262, 263, 3, 81, 40, 0, 263, 92, 1, 0, 0, 0, 264, 265,
		3, 73, 36, 0, 265, 266, 5, 117, 0, 0, 266, 267, 3, 81, 40, 0, 267, 268,
		3, 81, 40, 0, 268, 269, 3, 81, 40, 0, 269, 270, 3, 81, 40, 0, 270, 283,
		1, 0, 0, 0, 271, 272, 3, 73, 36, 0, 272, 273, 5, 85, 0, 0, 273, 274, 3,
		81, 40, 0, 274, 275, 3, 81, 40, 0, 275, 276, 3, 81, 40, 0, 276, 277, 3,
		81, 40, 0, 277, 278, 3, 81, 40, 0, 278, 279, 3, 81, 40, 0, 279, 280, 3,
		81, 40, 0, 280, 281, 3, 81, 40, 0, 281, 283, 1, 0, 0, 0, 282, 264, 1, 0,
		0, 0, 282, 271, 1, 0, 0, 0, 283, 94, 1, 0, 0, 0, 284, 286, 7, 7, 0, 0,
		285, 284, 1, 0, 0, 0, 286, 287, 1, 0, 0, 0, 287, 285, 1, 0, 0, 0, 287,
		288, 1, 0, 0, 0, 288, 289, 1, 0, 0, 0, 289, 290, 6, 47, 0, 0, 290, 96,
		1, 0, 0, 0, 291, 292, 5, 47, 0, 0, 292, 293, 5, 47, 0, 0, 293, 297, 1,
		0, 0, 0, 294, 296, 8, 8, 0, 0, 295, 294, 1, 0, 0, 0, 296, 299, 1, 0, 0,
		0, 297, 295, 1, 0, 0, 0, 297, 298, 1, 0, 0, 0, 298, 300, 1, 0, 0, 0, 299,
		297, 1, 0, 0, 0, 300, 301, 6, 48, 0, 0, 301, 98, 1, 0, 0, 0, 302, 304,
		3, 77, 38, 0, 303, 302, 1, 0, 0, 0, 304, 305, 1, 0, 0, 0, 305, 303, 1,
		0, 0, 0, 305, 306, 1, 0, 0, 0, 306, 307, 1, 0, 0, 0, 307, 309, 5, 46, 0,
		0, 308, 310, 3, 77, 38, 0, 309, 308, 1, 0, 0, 0, 310, 311, 1, 0, 0, 0,
		311, 309, 1, 0, 0, 0, 311, 312, 1, 0, 0, 0, 312, 314, 1, 0, 0, 0, 313,
		315, 3, 79, 39, 0, 314, 313, 1, 0, 0, 0, 314, 315, 1, 0, 0, 0, 315, 333,
		1, 0, 0, 0, 316, 318, 3, 77, 38, 0, 317, 316, 1, 0, 0, 0, 318, 319, 1,
		0, 0, 0, 319, 317, 1, 0, 0, 0, 319, 320, 1, 0, 0, 0, 320, 321, 1, 0, 0,
		0, 321, 322, 3, 79, 39, 0, 322, 333, 1, 0, 0, 0, 323, 325, 5, 46, 0, 0,
		324, 326, 3, 77, 38, 0, 325, 324, 1, 0, 0, 0, 326, 327, 1, 0, 0, 0, 327,
		325, 1, 0, 0, 0, 327, 328, 1, 0, 0, 0, 328, 330, 1, 0, 0, 0, 329, 331,
		3, 79, 39, 0, 330, 329, 1, 0, 0, 0, 330, 331, 1, 0, 0, 0, 331, 333, 1,
		0, 0, 0, 332, 303, 1, 0, 0, 0, 332, 317, 1, 0, 0, 0, 332, 323, 1, 0, 0,
		0, 333, 100, 1, 0, 0, 0, 334, 336, 3, 77, 38, 0, 335, 334, 1, 0, 0, 0,
		336, 337, 1, 0, 0, 0, 337, 335, 1, 0, 0, 0, 337, 338, 1, 0, 0, 0, 338,
		348, 1, 0, 0, 0, 339, 340, 5, 48, 0, 0, 340, 341, 5, 120, 0, 0, 341, 343,
		1, 0, 0, 0, 342, 344, 3, 81, 40, 0, 343, 342, 1, 0, 0, 0, 344, 345, 1,
		0, 0, 0, 345, 343, 1, 0, 0, 0, 345, 346, 1, 0, 0, 0, 346, 348, 1, 0, 0,
		0, 347, 335, 1, 0, 0, 0, 347, 339, 1, 0, 0, 0, 348, 102, 1, 0, 0, 0, 349,
		351, 3, 77, 38, 0, 350, 349, 1, 0, 0, 0, 351, 352, 1, 0, 0, 0, 352, 350,
		1, 0, 0, 0, 352, 353, 1, 0, 0, 0, 353, 354, 1, 0, 0, 0, 354, 355, 7, 9,
		0, 0, 355, 367, 1, 0, 0, 0, 356, 357, 5, 48, 0, 0, 357, 358, 5, 120, 0,
		0, 358, 360, 1, 0, 0, 0, 359, 361, 3, 81, 40, 0, 360, 359, 1, 0, 0, 0,
		361, 362, 1, 0, 0, 0, 362, 360, 1, 0, 0, 0, 362, 363, 1, 0, 0, 0, 363,
		364, 1, 0, 0, 0, 364, 365, 7, 9, 0, 0, 365, 367, 1, 0, 0, 0, 366, 350,
		1, 0, 0, 0, 366, 356, 1, 0, 0, 0, 367, 104, 1, 0, 0, 0, 368, 373, 5, 34,
		0, 0, 369, 372, 3, 85, 42, 0, 370, 372, 8, 10, 0, 0, 371, 369, 1, 0, 0,
		0, 371, 370, 1, 0, 0, 0, 372, 375, 1, 0, 0, 0, 373, 371, 1, 0, 0, 0, 373,
		374, 1, 0, 0, 0, 374, 376, 1, 0, 0, 0, 375, 373, 1, 0, 0, 0, 376, 465,
		5, 34, 0, 0, 377, 382, 5, 39, 0, 0, 378, 381, 3, 85, 42, 0, 379, 381, 8,
		11, 0, 0, 380, 378, 1, 0, 0, 0, 380, 379, 1, 0, 0, 0, 381, 384, 1, 0, 0,
		0, 382, 380, 1, 0, 0, 0, 382, 383, 1, 0, 0, 0, 383, 385, 1, 0, 0, 0, 384,
		382, 1, 0, 0, 0, 385, 465, 5, 39, 0, 0, 386, 387, 5, 34, 0, 0, 387, 388,
		5, 34, 0, 0, 388, 389, 5, 34, 0, 0, 389, 394, 1, 0, 0, 0, 390, 393, 3,
		85, 42, 0, 391, 393, 8, 12, 0, 0, 392, 390, 1, 0, 0, 0, 392, 391, 1, 0,
		0, 0, 393, 396, 1, 0, 0, 0, 394, 395, 1, 0, 0, 0, 394, 392, 1, 0, 0, 0,
		395, 397, 1, 0, 0, 0, 396, 394, 1, 0, 0, 0, 397, 398, 5, 34, 0, 0, 398,
		399, 5, 34, 0, 0, 399, 465, 5, 34, 0, 0, 400, 401, 5, 39, 0, 0, 401, 402,
		5, 39, 0, 0, 402, 403, 5, 39, 0, 0, 403, 408, 1, 0, 0, 0, 404, 407, 3,
		85, 42, 0, 405, 407, 8, 12, 0, 0, 406, 404, 1, 0, 0, 0, 406, 405, 1, 0,
		0, 0, 407, 410, 1, 0, 0, 0, 408, 409, 1, 0, 0, 0, 408, 406, 1, 0, 0, 0,
		409, 411, 1, 0, 0, 0, 410, 408, 1, 0, 0, 0, 411, 412, 5, 39, 0, 0, 412,
		413, 5, 39, 0, 0, 413, 465, 5, 39, 0, 0, 414, 415, 3, 83, 41, 0, 415, 419,
		5, 34, 0, 0, 416, 418, 8, 13, 0, 0, 417, 416, 1, 0, 0, 0, 418, 421, 1,
		0, 0, 0, 419, 417, 1, 0, 0, 0, 419, 420, 1, 0, 0, 0, 420, 422, 1, 0, 0,
		0, 421, 419, 1, 0, 0, 0, 422, 423, 5, 34, 0, 0, 423, 465, 1, 0, 0, 0, 424,
		425, 3, 83, 41, 0, 425, 429, 5, 39, 0, 0, 426, 428, 8, 14, 0, 0, 427, 426,
		1, 0, 0, 0, 428, 431, 1, 0, 0, 0, 429, 427, 1, 0, 0, 0, 429, 430, 1, 0,
		0, 0, 430, 432, 1, 0, 0, 0, 431, 429, 1, 0, 0, 0, 432, 433, 5, 39, 0, 0,
		433, 465, 1, 0, 0, 0, 434, 435, 3, 83, 41, 0, 435, 436, 5, 34, 0, 0, 436,
		437, 5, 34, 0, 0, 437, 438, 5, 34, 0, 0, 438, 442, 1, 0, 0, 0, 439, 441,
		9, 0, 0, 0, 440, 439, 1, 0, 0, 0, 441, 444, 1, 0, 0, 0, 442, 443, 1, 0,
		0, 0, 442, 440, 1, 0, 0, 0, 443, 445, 1, 0, 0, 0, 444, 442, 1, 0, 0, 0,
		445, 446, 5, 34, 0, 0, 446, 447, 5, 34, 0, 0, 447, 448, 5, 34, 0, 0, 448,
		465, 1, 0, 0, 0, 449, 450, 3, 83, 41, 0, 450, 451, 5, 39, 0, 0, 451, 452,
		5, 39, 0, 0, 452, 453, 5, 39, 0, 0, 453, 457, 1, 0, 0, 0, 454, 456, 9,
		0, 0, 0, 455, 454, 1, 0, 0, 0, 456, 459, 1, 0, 0, 0, 457, 458, 1, 0, 0,
		0, 457, 455, 1, 0, 0, 0, 458, 460, 1, 0, 0, 0, 459, 457, 1, 0, 0, 0, 460,
		461, 5, 39, 0, 0, 461, 462, 5, 39, 0, 0, 462, 463, 5, 39, 0, 0, 463, 465,
		1, 0, 0, 0, 464, 368, 1, 0, 0, 0, 464, 377, 1, 0, 0, 0, 464, 386, 1, 0,
		0, 0, 464, 400, 1, 0, 0, 0, 464, 414, 1, 0, 0, 0, 464, 424, 1, 0, 0, 0,
		464, 434, 1, 0, 0, 0, 464, 449, 1, 0, 0, 0, 465, 106, 1, 0, 0, 0, 466,
		467, 7, 15, 0, 0, 467, 468, 3, 105, 52, 0, 468, 108, 1, 0, 0, 0, 469, 472,
		3, 75, 37, 0, 470, 472, 5, 95, 0, 0, 471, 469, 1, 0, 0, 0, 471, 470, 1,
		0, 0, 0, 472, 478, 1, 0, 0, 0, 473, 477, 3, 75, 37, 0, 474, 477, 3, 77,
		38, 0, 475, 477, 5, 95, 0, 0, 476, 473, 1, 0, 0, 0, 476, 474, 1, 0, 0,
		0, 476, 475, 1, 0, 0, 0, 477, 480, 1, 0, 0, 0, 478, 476, 1, 0, 0, 0, 478,
		479, 1, 0, 0, 0, 479, 110, 1, 0, 0, 0, 480, 478, 1, 0, 0, 0, 37, 0, 143,
		234, 239, 249, 282, 287, 297, 305, 311, 314, 319, 327, 330, 332, 337, 345,
		347, 352, 362, 366, 371, 373, 380, 382, 392, 394, 406, 408, 419, 429, 442,
		457, 464, 471, 476, 478, 1, 0, 1, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// CommandsLexerInit initializes any static state used to implement CommandsLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewCommandsLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func CommandsLexerInit() {
	staticData := &commandslexerLexerStaticData
	staticData.once.Do(commandslexerLexerInit)
}

// NewCommandsLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewCommandsLexer(input antlr.CharStream) *CommandsLexer {
	CommandsLexerInit()
	l := new(CommandsLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &commandslexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "Commands.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// CommandsLexer tokens.
const (
	CommandsLexerT__0           = 1
	CommandsLexerT__1           = 2
	CommandsLexerT__2           = 3
	CommandsLexerT__3           = 4
	CommandsLexerCOMMAND        = 5
	CommandsLexerFLAG           = 6
	CommandsLexerARROW          = 7
	CommandsLexerEQUAL_ASSIGN   = 8
	CommandsLexerEQUALS         = 9
	CommandsLexerNOT_EQUALS     = 10
	CommandsLexerIN             = 11
	CommandsLexerLESS           = 12
	CommandsLexerLESS_EQUALS    = 13
	CommandsLexerGREATER_EQUALS = 14
	CommandsLexerGREATER        = 15
	CommandsLexerLOGICAL_AND    = 16
	CommandsLexerLOGICAL_OR     = 17
	CommandsLexerLBRACKET       = 18
	CommandsLexerRPRACKET       = 19
	CommandsLexerLBRACE         = 20
	CommandsLexerRBRACE         = 21
	CommandsLexerLPAREN         = 22
	CommandsLexerRPAREN         = 23
	CommandsLexerDOT            = 24
	CommandsLexerCOMMA          = 25
	CommandsLexerMINUS          = 26
	CommandsLexerEXCLAM         = 27
	CommandsLexerQUESTIONMARK   = 28
	CommandsLexerCOLON          = 29
	CommandsLexerPLUS           = 30
	CommandsLexerSTAR           = 31
	CommandsLexerSLASH          = 32
	CommandsLexerPERCENT        = 33
	CommandsLexerCEL_TRUE       = 34
	CommandsLexerCEL_FALSE      = 35
	CommandsLexerNUL            = 36
	CommandsLexerWHITESPACE     = 37
	CommandsLexerCOMMENT        = 38
	CommandsLexerNUM_FLOAT      = 39
	CommandsLexerNUM_INT        = 40
	CommandsLexerNUM_UINT       = 41
	CommandsLexerSTRING         = 42
	CommandsLexerBYTES          = 43
	CommandsLexerIDENTIFIER     = 44
)
