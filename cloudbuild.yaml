steps:
        - name: 'ubuntu'
          args: ['bash', 'conformance/start.sh', '$COMMIT_SHA'] # writes start time and #PR to started.json
        # Because testgrid uses monotonically increasing, numerical ids as folder names and GCB generates random ids, the timestamp
        # at start is recorded and written to a file, then read at the end to ensure monotonically increasing numbers.
        - name: 'ubuntu'
          args: ['bash', '-c', 'date +%s > _DATE' ] # stores timestamp in _DATE to use as build id
        - name: 'gcr.io/cloud-builders/gsutil'
          args: ['cp', '-r', '_DATE', 'gs://cel-conformance'] # writes _DATE to GCS bucket so it can be used as GCS folder name
        - name: 'gcr.io/cloud-builders/bazel'
          args: ['test', '--test_output=all', 'conformance/ct_dashboard'] # run conformance tests with bazel
        - name: 'ubuntu'
          args: ['bash', 'conformance/zip.sh'] # creates the necessary format and folder structure for TestGrid to parse
        - name: 'gcr.io/cloud-builders/gsutil'
          entrypoint: sh
          args: ['-c', 'gsutil cp -r $(cat _DATE) gs://cel-conformance/test-logs/'] # deploys folder of test results (with build id as folder name) to GCS
